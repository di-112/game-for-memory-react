[{"C:\\Users\\Dmitry\\Documents\\#projects\\game_for_memory_react\\src\\index.js":"1","C:\\Users\\Dmitry\\Documents\\#projects\\game_for_memory_react\\src\\App.js":"2","C:\\Users\\Dmitry\\Documents\\#projects\\game_for_memory_react\\src\\reportWebVitals.js":"3","C:\\Users\\Dmitry\\Documents\\#projects\\game_for_memory_react\\src\\redux\\store.js":"4","C:\\Users\\Dmitry\\Documents\\#projects\\game_for_memory_react\\src\\components\\panelStartGame\\panelStartGame.jsx":"5","C:\\Users\\Dmitry\\Documents\\#projects\\game_for_memory_react\\src\\redux\\reducers\\infoReducer.js":"6","C:\\Users\\Dmitry\\Documents\\#projects\\game_for_memory_react\\src\\components\\gameGrid\\gameGrid.jsx":"7","C:\\Users\\Dmitry\\Documents\\#projects\\game_for_memory_react\\src\\components\\gameGrid\\panelComplexity\\panelComplexity.jsx":"8","C:\\Users\\Dmitry\\Documents\\#projects\\game_for_memory_react\\src\\components\\popups\\popups.jsx":"9","C:\\Users\\Dmitry\\Documents\\#projects\\game_for_memory_react\\src\\components\\background\\background.jsx":"10","C:\\Users\\Dmitry\\Documents\\#projects\\game_for_memory_react\\src\\components\\gameWrapper\\gameWrapper.jsx":"11","C:\\Users\\Dmitry\\Documents\\#projects\\game_for_memory_react\\src\\components\\sound\\sound.jsx":"12"},{"size":500,"mtime":1607436621065,"results":"13","hashOfConfig":"14"},{"size":437,"mtime":1607777488430,"results":"15","hashOfConfig":"14"},{"size":362,"mtime":499162500000,"results":"16","hashOfConfig":"14"},{"size":307,"mtime":1607597081581,"results":"17","hashOfConfig":"14"},{"size":1033,"mtime":1607715110142,"results":"18","hashOfConfig":"14"},{"size":4867,"mtime":1607714135915,"results":"19","hashOfConfig":"14"},{"size":3299,"mtime":1607716340852,"results":"20","hashOfConfig":"14"},{"size":414,"mtime":1607445468718,"results":"21","hashOfConfig":"14"},{"size":3430,"mtime":1607715105206,"results":"22","hashOfConfig":"14"},{"size":752,"mtime":1607715061025,"results":"23","hashOfConfig":"14"},{"size":646,"mtime":1607706850685,"results":"24","hashOfConfig":"14"},{"size":1096,"mtime":1607715099588,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"29vsac",{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"28"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"28"},"C:\\Users\\Dmitry\\Documents\\#projects\\game_for_memory_react\\src\\index.js",[],["56","57"],"C:\\Users\\Dmitry\\Documents\\#projects\\game_for_memory_react\\src\\App.js",["58"],"import './App.scss';\nimport {Provider} from 'react-redux'\nimport { store } from './redux/store';\nimport {BrowserRouter, HashRouter, Redirect} from 'react-router-dom'\nimport GameWrapper from './components/gameWrapper/gameWrapper';\n\nfunction App() {\n  return (\n    <HashRouter >\n      <Provider store={store}>\n        <Redirect to='/easy'></Redirect>\n        <GameWrapper />\n      </Provider>\n    </HashRouter>\n  );\n}\n\nexport default App;\n","C:\\Users\\Dmitry\\Documents\\#projects\\game_for_memory_react\\src\\reportWebVitals.js",[],"C:\\Users\\Dmitry\\Documents\\#projects\\game_for_memory_react\\src\\redux\\store.js",["59"],"import React from 'react'\r\nimport {createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport infoReducer from './reducers/infoReducer'\r\n\r\n\r\nconst reducers = combineReducers({info: infoReducer})\r\n\r\nexport const store = createStore(reducers, applyMiddleware(thunk))","C:\\Users\\Dmitry\\Documents\\#projects\\game_for_memory_react\\src\\components\\panelStartGame\\panelStartGame.jsx",[],"C:\\Users\\Dmitry\\Documents\\#projects\\game_for_memory_react\\src\\redux\\reducers\\infoReducer.js",[],"C:\\Users\\Dmitry\\Documents\\#projects\\game_for_memory_react\\src\\components\\gameGrid\\gameGrid.jsx",["60","61","62","63"],"import React, { useEffect } from 'react'\r\nimport styles from './gameGrid.module.scss'\r\nimport PanelComplexity from './panelComplexity/panelComplexity'\r\nimport {connect} from 'react-redux'\r\nimport { addChoosenItem, addOpensItem, createGame, setChoosenItemsInNule, setTime, toggleLoose, toggleShowLearn } from '../../redux/reducers/infoReducer'\r\nimport { compose } from 'redux'\r\nimport { withRouter } from 'react-router'\r\nimport { ContainerLoose, ContainerWin, Learn } from '../popups/popups'\r\nlet timeout;\r\nconst GameGrid = (props) => {\r\n\r\n   let complexity = props.location.pathname.split('').slice(1).join('')\r\n   useEffect(()=>{\r\n     props.createGame(complexity)\r\n   }, [props.location.pathname])\r\n\r\n   useEffect(()=>{\r\n      props.createGame(complexity)\r\n    }, [])\r\n    \r\n   useEffect(()=>{\r\n      if(props.choosenItems.length===2){\r\n         if(props.colors[props.choosenItems[0]]===props.colors[props.choosenItems[1]] &&  props.choosenItems[0]!==props.choosenItems[1]) {\r\n            props.addOpensItem(props.choosenItems[0]); props.addOpensItem(props.choosenItems[1]); props.setChoosenItemsInNule()\r\n         }\r\n        else  setTimeout(()=> props.setChoosenItemsInNule(), 500)\r\n      }\r\n   }, [props.choosenItems])\r\n\r\n    useEffect(()=>{\r\n       if(props.isStartGame)timeout=setTimeout(()=>{props.setTime(props.time-1)},800)  \r\n       else  clearTimeout(timeout)\r\n   }, [props.isStartGame,props.time])\r\n\r\n   if(props.time===0)return < ContainerLoose/>\r\n   if(props.isShowLearn)return < Learn toggleShowLearn={props.toggleShowLearn}/>\r\n   if(props.opensItems.length === props.countItems)return < ContainerWin />\r\n   return (\r\n      <div className={styles.game}>\r\n         <PanelComplexity />\r\n          <p className={`${styles.time} ${props.time<11?styles.redTime:''}`}>time: {props.time}</p>\r\n          <div className={complexity==='hard'?styles.gameGridHard:styles.gameGridEasy}> \r\n            {  \r\n               props.colors.map((color, id)=> {\r\n                  return (\r\n                     <div  key={id} onClick={props.isStartGame?\r\n                        ()=>{ if(!props.opensItems.includes(id)&&props.choosenItems.length<2)props.addChoosenItem(id);}\r\n                        :()=>{}} \r\n                     style={props.opensItems.includes(id)||props.choosenItems.includes(id)?\r\n                        {background: color}:{background: 'black'}}\r\n                      className={styles.gridItem}></div>\r\n                  )\r\n               })\r\n            }\r\n          </div>\r\n          <progress className={styles.progressbar} value={props.opensItems.length} max={props.countItems}></progress>\r\n         \r\n      </div>\r\n   )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n   return {\r\n      time: state.info.time,\r\n      isStartGame: state.info.isStartGame,\r\n      isLoose: state.info.isLoose, \r\n      countItems: state.info.countItems,\r\n      colors: state.info.colors,\r\n      opensItems: state.info.opensItems,\r\n      choosenItems: state.info.choosenItems,\r\n      isShowLearn: state.info.isShowLearn,\r\n      allTime: state.info.allTime,\r\n      background: state.info.background\r\n   }\r\n}\r\n\r\nexport default compose(\r\n   withRouter,\r\n   connect(mapStateToProps, {setTime, toggleLoose, createGame, addOpensItem,addChoosenItem,setChoosenItemsInNule, toggleShowLearn})\r\n)(GameGrid)  ","C:\\Users\\Dmitry\\Documents\\#projects\\game_for_memory_react\\src\\components\\gameGrid\\panelComplexity\\panelComplexity.jsx",[],["64","65"],"C:\\Users\\Dmitry\\Documents\\#projects\\game_for_memory_react\\src\\components\\popups\\popups.jsx",[],"C:\\Users\\Dmitry\\Documents\\#projects\\game_for_memory_react\\src\\components\\background\\background.jsx",[],"C:\\Users\\Dmitry\\Documents\\#projects\\game_for_memory_react\\src\\components\\gameWrapper\\gameWrapper.jsx",[],"C:\\Users\\Dmitry\\Documents\\#projects\\game_for_memory_react\\src\\components\\sound\\sound.jsx",["66"],"import React, { useMemo } from 'react'\r\nimport styles from './sound.module.scss'\r\nimport useSound from 'use-sound';\r\nimport sound from '../../img/speaker-volume.svg' \r\nimport offSOund from '../../img/sound-off.svg' \r\nimport audioSea from '../../audio/audio_sea.mp3' \r\nimport audioFire from '../../audio/audio_fire.mp3' \r\nimport audioRain from '../../audio/audio_rain.mp3' \r\nimport { connect } from 'react-redux';\r\n\r\nconst Sound = ({background}) => {\r\n   let audiotrack;\r\n   switch(background){\r\n      case 'sea': audiotrack = audioSea; break\r\n      case 'fire': audiotrack = audioFire; break\r\n      case 'rain': audiotrack = audioRain; break\r\n      default: audiotrack = audioSea; break\r\n   }\r\n   \r\n   const [play, {stop, isPlaying}] = useSound(audiotrack, {interrupt:true});\r\n\r\n   useMemo(() => stop(), [audiotrack]);\r\n\r\n   return (\r\n      <div className={styles.sound}>       \r\n         {isPlaying? <img onClick={()=>stop()} src={sound} alt=\"\"/>:<img onClick={play} src={offSOund} alt=\"\"/>}\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default connect((state)=>({background: state.info.background}))(Sound)",{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","severity":1,"message":"72","line":4,"column":9,"nodeType":"73","messageId":"74","endLine":4,"endColumn":22},{"ruleId":"71","severity":1,"message":"75","line":1,"column":8,"nodeType":"73","messageId":"74","endLine":1,"endColumn":13},{"ruleId":"76","severity":1,"message":"77","line":15,"column":7,"nodeType":"78","endLine":15,"endColumn":32,"suggestions":"79"},{"ruleId":"76","severity":1,"message":"77","line":19,"column":8,"nodeType":"78","endLine":19,"endColumn":10,"suggestions":"80"},{"ruleId":"76","severity":1,"message":"81","line":28,"column":7,"nodeType":"78","endLine":28,"endColumn":27,"suggestions":"82"},{"ruleId":"76","severity":1,"message":"81","line":33,"column":7,"nodeType":"78","endLine":33,"endColumn":37,"suggestions":"83"},{"ruleId":"67","replacedBy":"84"},{"ruleId":"69","replacedBy":"85"},{"ruleId":"76","severity":1,"message":"86","line":22,"column":26,"nodeType":"78","endLine":22,"endColumn":38,"suggestions":"87"},"no-native-reassign",["88"],"no-negated-in-lhs",["89"],"no-unused-vars","'BrowserRouter' is defined but never used.","Identifier","unusedVar","'React' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'complexity' and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["90"],["91"],"React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["92"],["93"],["88"],["89"],"React Hook useMemo has a missing dependency: 'stop'. Either include it or remove the dependency array.",["94"],"no-global-assign","no-unsafe-negation",{"desc":"95","fix":"96"},{"desc":"97","fix":"98"},{"desc":"99","fix":"100"},{"desc":"101","fix":"102"},{"desc":"103","fix":"104"},"Update the dependencies array to be: [complexity, props, props.location.pathname]",{"range":"105","text":"106"},"Update the dependencies array to be: [complexity, props]",{"range":"107","text":"108"},"Update the dependencies array to be: [props, props.choosenItems]",{"range":"109","text":"110"},"Update the dependencies array to be: [props, props.isStartGame, props.time]",{"range":"111","text":"112"},"Update the dependencies array to be: [stop]",{"range":"113","text":"114"},[673,698],"[complexity, props, props.location.pathname]",[766,768],"[complexity, props]",[1202,1222],"[props, props.choosenItems]",[1379,1409],"[props, props.isStartGame, props.time]",[804,816],"[stop]"]