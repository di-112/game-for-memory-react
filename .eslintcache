[{"/home/pravosleva/projects/game-for-memory-react/src/index.js":"1","/home/pravosleva/projects/game-for-memory-react/src/App.js":"2","/home/pravosleva/projects/game-for-memory-react/src/reportWebVitals.js":"3","/home/pravosleva/projects/game-for-memory-react/src/redux/store.js":"4","/home/pravosleva/projects/game-for-memory-react/src/components/gameWrapper/gameWrapper.jsx":"5","/home/pravosleva/projects/game-for-memory-react/src/redux/reducers/infoReducer.js":"6","/home/pravosleva/projects/game-for-memory-react/src/components/gameGrid/gameGrid.jsx":"7","/home/pravosleva/projects/game-for-memory-react/src/components/panelStartGame/panelStartGame.jsx":"8","/home/pravosleva/projects/game-for-memory-react/src/components/background/background.jsx":"9","/home/pravosleva/projects/game-for-memory-react/src/components/sound/sound.jsx":"10","/home/pravosleva/projects/game-for-memory-react/src/components/gameGrid/panelComplexity/panelComplexity.jsx":"11","/home/pravosleva/projects/game-for-memory-react/src/components/popups/popups.jsx":"12"},{"size":500,"mtime":1630581530056,"results":"13","hashOfConfig":"14"},{"size":437,"mtime":1630581529960,"results":"15","hashOfConfig":"14"},{"size":362,"mtime":1630581530056,"results":"16","hashOfConfig":"14"},{"size":299,"mtime":1630581530056,"results":"17","hashOfConfig":"14"},{"size":647,"mtime":1630587192854,"results":"18","hashOfConfig":"14"},{"size":4742,"mtime":1630581530056,"results":"19","hashOfConfig":"14"},{"size":3343,"mtime":1630585318597,"results":"20","hashOfConfig":"14"},{"size":1037,"mtime":1630587528519,"results":"21","hashOfConfig":"14"},{"size":727,"mtime":1630581529996,"results":"22","hashOfConfig":"14"},{"size":1066,"mtime":1630581529996,"results":"23","hashOfConfig":"14"},{"size":399,"mtime":1630581529996,"results":"24","hashOfConfig":"14"},{"size":3354,"mtime":1630581529996,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1wfxu2d",{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/pravosleva/projects/game-for-memory-react/src/index.js",[],"/home/pravosleva/projects/game-for-memory-react/src/App.js",["54"],"import './App.scss';\nimport {Provider} from 'react-redux'\nimport { store } from './redux/store';\nimport {BrowserRouter, HashRouter, Redirect} from 'react-router-dom'\nimport GameWrapper from './components/gameWrapper/gameWrapper';\n\nfunction App() {\n  return (\n    <HashRouter >\n      <Provider store={store}>\n        <Redirect to='/easy'></Redirect>\n        <GameWrapper />\n      </Provider>\n    </HashRouter>\n  );\n}\n\nexport default App;\n","/home/pravosleva/projects/game-for-memory-react/src/reportWebVitals.js",[],"/home/pravosleva/projects/game-for-memory-react/src/redux/store.js",["55"],"import React from 'react'\nimport {createStore, combineReducers, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport infoReducer from './reducers/infoReducer'\n\n\nconst reducers = combineReducers({info: infoReducer})\n\nexport const store = createStore(reducers, applyMiddleware(thunk))","/home/pravosleva/projects/game-for-memory-react/src/components/gameWrapper/gameWrapper.jsx",[],"/home/pravosleva/projects/game-for-memory-react/src/redux/reducers/infoReducer.js",[],"/home/pravosleva/projects/game-for-memory-react/src/components/gameGrid/gameGrid.jsx",["56","57","58","59"],"import React, { useEffect } from 'react'\nimport styles from './gameGrid.module.scss'\nimport PanelComplexity from './panelComplexity/panelComplexity'\nimport {connect} from 'react-redux'\nimport { addChoosenItem, addOpensItem, createGame, setChoosenItemsInNule, setTime, toggleLoose, toggleShowLearn } from '../../redux/reducers/infoReducer'\nimport { compose } from 'redux'\nimport { withRouter } from 'react-router'\nimport { ContainerLoose, ContainerWin, Learn } from '../popups/popups'\nimport clsx from 'clsx'\n\nlet timeout;\nconst GameGrid = (props) => {\n\n   let complexity = props.location.pathname.split('').slice(1).join('')\n   useEffect(()=>{\n     props.createGame(complexity)\n   }, [props.location.pathname])\n\n   useEffect(()=>{\n      props.createGame(complexity)\n    }, [])\n    \n   useEffect(()=>{\n      if(props.choosenItems.length===2){\n         if(props.colors[props.choosenItems[0]]===props.colors[props.choosenItems[1]] &&  props.choosenItems[0]!==props.choosenItems[1]) {\n            props.addOpensItem(props.choosenItems[0]); props.addOpensItem(props.choosenItems[1]); props.setChoosenItemsInNule()\n         }\n        else  setTimeout(()=> props.setChoosenItemsInNule(), 500)\n      }\n   }, [props.choosenItems])\n\n    useEffect(()=>{\n      if(props.isStartGame)timeout=setTimeout(()=>{props.setTime(props.time-1)},800)  \n      else  clearTimeout(timeout)\n   }, [props.isStartGame,props.time])\n\n   if(props.time===0)return < ContainerLoose/>\n   if(props.opensItems.length === props.countItems)return < ContainerWin />\n   return (\n      <div className={styles.game}>\n         <PanelComplexity />\n          <div className={`${styles.time} ${props.time<11?styles.redTime:''}`}>time: {props.time}</div>\n          <div className={clsx(styles.gameGrid, { [styles.gameGridEasy]: complexity === 'easy', [styles.gameGridMiddle]: complexity === 'middle', [styles.gameGridHard]: complexity === 'hard'})}> \n            {  \n               props.colors.map((color, id)=> {\n                  return (\n                     <div  key={id} onClick={props.isStartGame?\n                        ()=>{ if(!props.opensItems.includes(id)&&props.choosenItems.length<2)props.addChoosenItem(id);}\n                        :()=>{}} \n                     style={props.opensItems.includes(id)||props.choosenItems.includes(id)?\n                        {background: color}:{background: 'black'}}\n                      className={styles.gridItem}></div>\n                  )\n               })\n            }\n          </div>\n          <progress className={styles.progressbar} value={props.opensItems.length} max={props.countItems}></progress>\n         {props.isShowLearn&&< Learn toggleShowLearn={props.toggleShowLearn}/>}\n      </div>\n   )\n}\n\nconst mapStateToProps = (state) => {\n   return {\n      time: state.info.time,\n      isStartGame: state.info.isStartGame,\n      isLoose: state.info.isLoose, \n      countItems: state.info.countItems,\n      colors: state.info.colors,\n      opensItems: state.info.opensItems,\n      choosenItems: state.info.choosenItems,\n      isShowLearn: state.info.isShowLearn,\n      allTime: state.info.allTime,\n      background: state.info.background\n   }\n}\n\nexport default compose(\n   withRouter,\n   connect(mapStateToProps, {setTime, toggleLoose, createGame, addOpensItem,addChoosenItem,setChoosenItemsInNule, toggleShowLearn})\n)(GameGrid)  ","/home/pravosleva/projects/game-for-memory-react/src/components/panelStartGame/panelStartGame.jsx",[],"/home/pravosleva/projects/game-for-memory-react/src/components/background/background.jsx",[],"/home/pravosleva/projects/game-for-memory-react/src/components/sound/sound.jsx",["60"],"import React, { useMemo } from 'react'\nimport styles from './sound.module.scss'\nimport useSound from 'use-sound';\nimport sound from '../../img/speaker-volume.svg' \nimport offSOund from '../../img/sound-off.svg' \nimport audioSea from '../../audio/audio_sea.mp3' \nimport audioFire from '../../audio/audio_fire.mp3' \nimport audioRain from '../../audio/audio_rain.mp3' \nimport { connect } from 'react-redux';\n\nconst Sound = ({background}) => {\n   let audiotrack;\n   switch(background){\n      case 'sea': audiotrack = audioSea; break\n      case 'fire': audiotrack = audioFire; break\n      case 'rain': audiotrack = audioRain; break\n      default: audiotrack = audioSea; break\n   }\n   \n   const [play, {stop, isPlaying}] = useSound(audiotrack, {interrupt:true});\n\n   useMemo(() => stop(), [audiotrack]);\n\n   return (\n      <div className={styles.sound}>       \n         {isPlaying? <img onClick={()=>stop()} src={sound} alt=\"\"/>:<img onClick={play} src={offSOund} alt=\"\"/>}\n      </div>\n   )\n}\n\nexport default connect((state)=>({background: state.info.background}))(Sound)","/home/pravosleva/projects/game-for-memory-react/src/components/gameGrid/panelComplexity/panelComplexity.jsx",[],"/home/pravosleva/projects/game-for-memory-react/src/components/popups/popups.jsx",[],{"ruleId":"61","severity":1,"message":"62","line":4,"column":9,"nodeType":"63","messageId":"64","endLine":4,"endColumn":22},{"ruleId":"61","severity":1,"message":"65","line":1,"column":8,"nodeType":"63","messageId":"64","endLine":1,"endColumn":13},{"ruleId":"66","severity":1,"message":"67","line":17,"column":7,"nodeType":"68","endLine":17,"endColumn":32,"suggestions":"69"},{"ruleId":"66","severity":1,"message":"67","line":21,"column":8,"nodeType":"68","endLine":21,"endColumn":10,"suggestions":"70"},{"ruleId":"66","severity":1,"message":"71","line":30,"column":7,"nodeType":"68","endLine":30,"endColumn":27,"suggestions":"72"},{"ruleId":"66","severity":1,"message":"71","line":35,"column":7,"nodeType":"68","endLine":35,"endColumn":37,"suggestions":"73"},{"ruleId":"66","severity":1,"message":"74","line":22,"column":26,"nodeType":"68","endLine":22,"endColumn":38,"suggestions":"75"},"no-unused-vars","'BrowserRouter' is defined but never used.","Identifier","unusedVar","'React' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'complexity' and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["76"],["77"],"React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["78"],["79"],"React Hook useMemo has a missing dependency: 'stop'. Either include it or remove the dependency array.",["80"],{"desc":"81","fix":"82"},{"desc":"83","fix":"84"},{"desc":"85","fix":"86"},{"desc":"87","fix":"88"},{"desc":"89","fix":"90"},"Update the dependencies array to be: [complexity, props, props.location.pathname]",{"range":"91","text":"92"},"Update the dependencies array to be: [complexity, props]",{"range":"93","text":"94"},"Update the dependencies array to be: [props, props.choosenItems]",{"range":"95","text":"96"},"Update the dependencies array to be: [props, props.isStartGame, props.time]",{"range":"97","text":"98"},"Update the dependencies array to be: [stop]",{"range":"99","text":"100"},[684,709],"[complexity, props, props.location.pathname]",[773,775],"[complexity, props]",[1200,1220],"[props, props.choosenItems]",[1370,1400],"[props, props.isStartGame, props.time]",[783,795],"[stop]"]